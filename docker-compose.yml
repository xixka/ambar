version: "2.1"
networks:
  internal_network:
    ipam:
      config:
      - subnet: 172.19.0.0/16
        gateway: 172.19.0.11
services:      
  db:
#    restart: always
    privileged: true
    networks:
      - internal_network
    image: land007/ambar-mongodb:latest
    environment:
      - cacheSizeGB=2
      - LANIP=172.19.0.1
    volumes:
      - ~/docker/ambar/db:/data/db
    expose:
      - "27017"   
  es:
#    restart: always
    privileged: true
    networks:
      - internal_network
    image: land007/ambar-es:latest
    expose:
      - "9200" 
    environment:
      - cluster.name=ambar-es
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - LANIP=172.19.0.1
    ulimits:
      memlock:
        soft: -1
        hard: -1  
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ~/docker/ambar/es:/usr/share/elasticsearch/data
  rabbit:
#    restart: always
    privileged: true
    networks:
      - internal_network
    image: land007/ambar-rabbit:latest
    hostname: rabbit
    expose:
      - "15672"
      - "5672"   
    environment:
      - LANIP=172.19.0.1
    volumes:
      - ~/docker/ambar/rabbit:/var/lib/rabbitmq
  redis:
#    restart: always
    privileged: true
    sysctls:
      - net.core.somaxconn=1024
    networks:
      - internal_network
    image: land007/ambar-redis:latest
    expose:
      - "6379" 
    environment:
      - LANIP=172.19.0.1
  serviceapi:
    depends_on:
      redis:
        condition: service_healthy
      rabbit:
        condition: service_healthy
      es:
        condition: service_healthy
      db:
        condition: service_healthy
#    restart: always
    privileged: true
    networks:
      - internal_network
    image: land007/ambar-serviceapi:latest
    expose:
      - "8081"  
    environment:            
      - mongoDbUrl=mongodb://db:27017/ambar_data
      - elasticSearchUrl=http://es:9200
      - redisHost=redis
      - redisPort=6379
      - rabbitHost=amqp://rabbit
      - langAnalyzer=ambar_cn
      - SLAO_HOSTNAME=ambar
      - SLAO_API_KEY=
      - LANIP=172.19.0.1
  webapi:
    depends_on:
      serviceapi:
        condition: service_healthy
#    restart: always
    privileged: true
    networks:
      - internal_network
    image: land007/ambar-webapi:latest
    expose:
      - "8080"
    ports:
      - "8080:8080"
    environment:            
      - uiLang=cn
      - mongoDbUrl=mongodb://db:27017/ambar_data
      - elasticSearchUrl=http://es:9200
      - redisHost=redis
      - redisPort=6379
      - serviceApiUrl=http://serviceapi:8081
      - rabbitHost=amqp://rabbit  
      - SLAO_HOSTNAME=ambar
      - SLAO_API_KEY=  
      - LANIP=172.19.0.1
  frontend:
    depends_on:
      webapi:
        condition: service_healthy
    image: land007/ambar-frontend:latest
#    restart: always
    privileged: true
    networks:
      - internal_network
    ports:
      - "3000:80"
    expose:
      - "80"
    environment:
      - api=http://127.0.0.1:8080  #修改为对外提供服务的api的地址，前端浏览器提供这个地址调用
      - LANIP=172.19.0.1
  pipeline0:
    depends_on: 
      serviceapi: 
        condition: service_healthy
    image: land007/ambar-pipeline:latest
#    restart: always
    privileged: true
    networks:
      - internal_network  
    environment:                
      - id=0
      - api_url=http://serviceapi:8081
      - rabbit_host=amqp://rabbit
      - LANIP=172.19.0.1
  crawler2:
    depends_on: 
      serviceapi: 
        condition: service_healthy 
    image: land007/ambar-local-crawler:latest
#    restart: always
    privileged: true
    networks:
      - internal_network
    expose:
      - "8082"
    environment:      
      - name=crawler2
      - LANIP=172.19.0.1
    volumes:
      -  ~/docker/ambar/test:/usr/data
  portainer:
#    restart: always
    privileged: true
    networks:
      - internal_network
    image: land007/portainer:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/docker/portainer_data1:/data
    expose:
      - "9000"
    ports:
      - "9001:9000"
    environment:
      - LANIP=172.19.0.1
  
